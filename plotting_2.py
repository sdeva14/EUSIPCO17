import matplotlib.pyplot as plt
import numpy as np

# 3-fold result

# fig, ax = plt.subplots(figsize=(10,5))

## data
## data for single model as min event length
# fsco_list = [0.8408971029163333, 0.8880069334926667, 0.904271314196, 0.9027217107603334, 0.8972272312243333,]
# prec_list = [0.7597920788066667, 0.8549585675453333, 0.905149039347, 0.9251694693966667, 0.9357665057450001]
# reca_list = [0.9675000678143332, 0.9374250578766666, 0.9189314614256666, 0.903807824898, 0.886857718341]

## data for ensemble model as min event length
# fsco_list = [0.834993264701, 0.8840287196986667, 0.9146783144216667, 0.9164855979279999, 0.9126382942423333]
# prec_list = [0.7457638340893333, 0.8361832687336667, 0.9061117892186666, 0.9266288887596668, 0.9355848507669999]
# reca_list = [0.9799530599209999, 0.9548859140523334, 0.9349002164593333, 0.9236066034476668, 0.9113084321503333]

# # data for single model with gmm 60
# fsco_list = [0.8422998874216666, 0.842494106303, 0.8464997872616666, 0.8533636008496667]
# prec_list = [0.8586083358659998, 0.8659073616386667, 0.8647887427463333, 0.8784254461613333]
# reca_list = [0.8534060043933334, 0.8465187992213333, 0.8520366137709999, 0.856632357348]

# data for FFT test with 40ms frame
# fsco_list = [0.8393025465976667, 0.852420546518, 0.8553474096643333, 0.8824260679213333, 0.8829204716236667]
# prec_list = [0.760143830883, 0.7736697699046667, 0.779539660604, 0.8332901314913332, 0.8452795862850001]
# reca_list = [0.9649440298946667, 0.9727901917936667, 0.9651807860649999, 0.9502485729809999, 0.9408891096576667]

# # data for Tr: phan34, Te: Ins
# fsco_list = [0.7817633348006666, 0.7351652407303333, 0.6636983763163333, 0.5777212749719999, 0.5127612783750001]
# prec_list = [0.765271872556, 0.797160855291, 0.798909831381, 0.7781731575049999, 0.7519540438720002]
# reca_list = [0.86247851069, 0.7518487958483333, 0.6362279343386666, 0.518266760129, 0.43652308498733333]

# data for Tr: Ins, Te: Phan34
fsco_list = [0.852336188985, 0.799323644954]
prec_list = [0.866744047939, 0.770784066627]
reca_list = [0.852088934812, 0.838890406104]

# # data for d1 to d2
# fsco_list = [0.8602652337639999, 0.8217220084756667, 0.782658854267, 0.742052621409, 0.7102785714643334]
# prec_list = [0.976310264288, 0.9887888413106666, 0.9911416748933334, 0.992882642693, 0.9962438791783333]
# reca_list = [0.7848913512940001, 0.7230220361690001, 0.6710030554263332, 0.6205325740486667, 0.5830233442703333]

# data for d1 to d3
# fsco_list = [0.8480635740676666, 0.7861806117046667, 0.7371558148986667, 0.6845843324263333, 0.6308672433173333]
# prec_list = [0.9756534906893334, 0.9881797189286666, 0.989690100026, 0.9912403206083334, 0.9951376799133334]
# reca_list = [0.7658527449973334, 0.678358770798, 0.6191835695103333, 0.5552018321356668, 0.49330407075266663]

# # data for d2 to d3
# fsco_list = [0.8948605199883334, 0.888621102403, 0.8782293310863333, 0.864834670331, 0.8492673957210001]
# prec_list = [0.9363076728936667, 0.964701650606, 0.9835577531363334, 0.9904359313736667, 0.996520051294]
# reca_list = [0.8655623694736666, 0.8325038223156667, 0.803775971957, 0.7815257447376668, 0.7582194512163333]

# # data for d1+2 to d3
# fsco_list = [0.8937581230786668, 0.8605334144633333, 0.8240239466059999, 0.786567210889, 0.7521960327893332]
# prec_list = [0.9664593491029999, 0.9879386333569999, 0.9977542305270001, 0.9983331036163334, 0.9990330519603333]
# reca_list = [0.8398393576673334, 0.774929144417, 0.7222332074696668, 0.676200546435, 0.6358940387386666]

# # data for d3 to d1+2
# fsco_list = [0.9051332957113333, 0.898297164994, 0.8873584573623333, 0.8724277494463334, 0.8567111751223333]
# prec_list = [0.9372613796036666, 0.9652709993996665, 0.9842096014639999, 0.9906707181603333, 0.996669842401]
# reca_list = [0.8826692936476667, 0.8471386707209999, 0.8167977606876667, 0.791701064878, 0.767527347437]

# 
feat_pTime = [1, 2]
index = np.arange(len(fsco_list))

# parameter
bar_width = 0.2
opacity = 0.7

# feat_pTime_bar = plt.bar(index-bar_width/2, feat_pTime, bar_width,
# 				alpha=opacity,
# 				color='#42B3D5',
# 				label='Feature Engneering Time')
# plt.xticks(index, ('2048', '4096', '9182', '16384', '32768'))
# plt.axis([-0.2,4.8,0,1])
# plt.xlabel('The number of FFT')
# plt.ylabel('Feature Engineering Time (ms)')

# bar graph
prec_bar = plt.bar(index, prec_list, bar_width,
			alpha=opacity,
			color='#DCEDC8',
			label='Precision')

reca_bar = plt.bar(index + bar_width, reca_list, bar_width,
			alpha=opacity,
			color='#42B3D5',
			label='Recall')

fsco_bar = plt.bar(index + bar_width * 2, fsco_list, bar_width,
			alpha=opacity,
			color='#1A237E',
			label='Fscore')

# labeling
plt.xlabel('Min Event Length (sec)')
plt.ylabel('Scores')
plt.axis([-0.2, 1.8, 0.5, 1])
plt.xticks(index + 1.5* bar_width, ('MFCC-Raw', 'MFCC-Diff'))
# plt.legend(['Precision', 'Recall', 'F-score'], loc='upper right')
# plt.legend(['Precision', 'Recall', 'F-score'], loc='upper right', ncol=1, prop={'size':12}, bbox_to_anchor=(1,1.3))
plt.legend(loc='upper center', ncol=3, prop={'size':12}, bbox_to_anchor=(0.5,1.13))
plt.tight_layout(pad=4)

plt.grid()
plt.show()